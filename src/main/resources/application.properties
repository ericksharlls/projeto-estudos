# https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html
spring.profiles.active=development
spring.datasource.url=jdbc:mysql://localhost:3306/db_cronos?createDatabaseIfNotExist=true&serverTimezone=America/Fortaleza
spring.datasource.username=root

## Configurando Hikari (gerenciador de pool de conexões)
spring.datasource.hikari.minimum-idle=3
spring.datasource.hikari.maximum-pool-size=5
#spring.datasource.hikari.idle-timeout=60000

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Configuração para o Jackson lançar exceção com as propriedades desconhecidas do modelo de representação da API
spring.jackson.deserialization.fail-on-unknown-properties=true
# Configuração para o Jackson lançar exceção com as propriedades ignoradas do modelo de representação da API
spring.jackson.deserialization.fail-on-ignored-properties=true

# Para que exceções de URL não encontrada sejam tratadas pelo @ControllerAdvice da nossa aplicação (ApiExceptionHandler), 
# é necessária a configuração abaixo que instrui o Spring a lançar uma exceção "NoHandlerFoundException" q é tratada 
# pelo nosso @ControllerAdvice que, por sua vez, gera uma resposta customizada e mais amigável ao consumidor da API.
# Por padrão, o Spring encaminha para um outro handler (DefaultHandlerExceptionResolver) tratar esse tipo de exceção, 
# e não para o nosso handler (ApiExceptionHandler).
# tem q adicionar as duas linhas abaixo
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false
# Linha acima desabilita o acesso à pasta static (arquivos estáticos, imagens, javascript, css) do projeto
#spring.resources.add-mappings=false


## Alteração 04 no arquivo application.properties